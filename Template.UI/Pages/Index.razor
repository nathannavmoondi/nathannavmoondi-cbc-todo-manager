@page "/"
@using Blazored.Toast.Services
@using Template.UI.Services
@inject IToastService toastService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject TodoService TodosService
@inject GlobalVariableService globalVariableService

<PageTitle>CBC Todo Manager</PageTitle>

<div class="sidebar">
    <!-- insert your sidebar items here -->
    <h3>Technology Stack</h3>
    <h4>.NET 7.0</h4>
    <h5>Blazor</h5>
    <p>API with SQLite Database.  Hosted on Azure account with GitHub actions to automatically publish.</p>
    <h4>Source Code</h4>   
    <p>GitHub <a href="#">Link</a></p>
  
</div>
  <div id="content">

            <form @onsubmit="Login">
                <h3>Login</h3>
                <div class="form-group">
                    <label for="username">Username:</label>
                    <input id="username" class="form-control" @bind="Username" />
                </div>
                <br/>
                <div class="form-group">
                    <label for="password">Password:</label>
                    <input id="password" class="form-control"  type="text" @bind="Password" />
                </div>


                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <br/>
                    <div class="alert alert-danger" role="alert">
                        @ErrorMessage
                    </div>
                }
                 <br /><br />
                <button class="btn btn-primary" type="submit" @ref="submitButton">Login</button>

            </form>
</div>


@code {
    private string Username = "";
    private string Password = "";
    private string ErrorMessage { get; set; } 
    private bool IsFormSubmitted { get; set; }
    private ElementReference submitButton;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            //just playing with jsinterip
            await JSRuntime.InvokeVoidAsync("setDefaultButton", submitButton);
        }
    }

    private async void Login()
    {
        //todo call api in service to verify username/pw
        var result = await TodosService.Login(Username, Password);

        if (result == false)
        {
            toastService.ShowError("Invalid username or password");
            ErrorMessage = "Invalid username or password";
            StateHasChanged();
        }
        else
        {
            globalVariableService.UserName = "Admin";
            NavigationManager.NavigateTo("/todos");
          }
    }
}